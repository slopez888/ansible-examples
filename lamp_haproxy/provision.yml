---
#Provision some instances:
- hosts: localhost
  connection: local
  become: False
  gather_facts: False
  vars:
    keypair: 
    instance_type: m1.small
    security_group: my_securitygroup
    name:
    image: my_ami_id
    region: us-west-2
    zone: us-west-2a
    count: 1
    subnet_id: subnet-07d10bc0dda0bbfc6

  vars_files:
  - group_vars/all

  tasks:
  - name: Launch webserver instances
    ec2:
      key_name: "{{ keypair }}"
      #group: "{{ security_group }}"
      instance_type: "{{ instance_type }}"
      image: "{{ image }}"
      wait: true
      region: "{{ region }}"
      zone: "{{ zone }}"
      vpc_subnet_id: "{{ subnet_id }}"
      assign_public_ip: yes
      instance_tags:
        tower: RHEL
        ansible_group: webservers
        ec2_tag: webservers
        Name: Linux-webserver-001
      count_tag:
        Name: webservers
      exact_count: "{{ count }}"
    register: ec2

  - name: Launch database instance
    ec2: 
      key_name: "{{ keypair }}"
      #group: "{{ security_group }}"
      instance_type: "{{ instance_type }}"
      image: "{{ image }}"
      wait: true
      region: "{{ region }}"
      zone: "{{ zone }}"
      vpc_subnet_id: "{{ subnet_id }}"
      assign_public_ip: yes
      instance_tags:
        tower: RHEL
        ansible_group: dbservers
        ec2_tag: dbservers
        Name: Linux-db-001
      count_tag:
        Name: dbservers
      exact_count: "{{ count }}"  
    register: ec2

  - name: Launch load balancing instance
    ec2: 
      key_name: "{{ keypair }}"
      #group: "{{ security_group }}"
      instance_type: "{{ instance_type }}"
      image: "{{ image }}"
      wait: true
      region: "{{ region }}"
      zone: "{{ zone }}"
      vpc_subnet_id: "{{ subnet_id }}"
      assign_public_ip: yes
      instance_tags:
        tower: RHEL
        ansible_group: lbservers
        ec2_tag: lbservers
        Name: Linux-lb-001
      count_tag:
        Name: lbservers
      exact_count: "{{ count }}" 
    register: ec2

  - name: Launch monitoring instance
    ec2: 
      key_name: "{{ keypair }}"
      #group: "{{ security_group }}"
      instance_type: "{{ instance_type }}"
      image: "{{ image }}"
      wait: true
      region: "{{ region }}"
      zone: "{{ zone }}"
      vpc_subnet_id: "{{ subnet_id }}"
      assign_public_ip: yes
      instance_tags:
        tower: RHEL
        ansible_group: monitoring
        ec2_tag: monitoring
        Name: Linux-monitoring-001
      count_tag:
        Name: monitoring
      exact_count: "{{ count }}"
    register: ec2

  - name: Wait for SSH to come up
    local_action: wait_for host={{ item.public_dns_name }}
      port=22 delay=60 timeout=320 state=started
    with_items: "{{ ec2.instances }}"
